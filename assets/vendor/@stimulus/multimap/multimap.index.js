/**
 * Bundled by jsDelivr using Rollup v2.79.2 and Terser v5.39.0.
 * Original file: /npm/@stimulus/multimap@2.0.0/dist/index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
function e(e,t,n){r(e,t).add(n)}function t(e,t,o){r(e,t).delete(o),n(e,t)}function r(e,t){var r=e.get(t);return r||(r=new Set,e.set(t,r)),r}function n(e,t){var r=e.get(t);null!=r&&0==r.size&&e.delete(t)}var o,u=function(){function r(){this.valuesByKey=new Map}return Object.defineProperty(r.prototype,"values",{get:function(){return Array.from(this.valuesByKey.values()).reduce((function(e,t){return e.concat(Array.from(t))}),[])},enumerable:!1,configurable:!0}),Object.defineProperty(r.prototype,"size",{get:function(){return Array.from(this.valuesByKey.values()).reduce((function(e,t){return e+t.size}),0)},enumerable:!1,configurable:!0}),r.prototype.add=function(t,r){e(this.valuesByKey,t,r)},r.prototype.delete=function(e,r){t(this.valuesByKey,e,r)},r.prototype.has=function(e,t){var r=this.valuesByKey.get(e);return null!=r&&r.has(t)},r.prototype.hasKey=function(e){return this.valuesByKey.has(e)},r.prototype.hasValue=function(e){return Array.from(this.valuesByKey.values()).some((function(t){return t.has(e)}))},r.prototype.getValuesForKey=function(e){var t=this.valuesByKey.get(e);return t?Array.from(t):[]},r.prototype.getKeysForValue=function(e){return Array.from(this.valuesByKey).filter((function(t){return t[0],t[1].has(e)})).map((function(e){var t=e[0];return e[1],t}))},r}(),a=(o=function(e,t){return o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])},o(e,t)},function(e,t){function r(){this.constructor=e}o(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}),y=function(r){function n(){var e=r.call(this)||this;return e.keysByValue=new Map,e}return a(n,r),Object.defineProperty(n.prototype,"values",{get:function(){return Array.from(this.keysByValue.keys())},enumerable:!1,configurable:!0}),n.prototype.add=function(t,n){r.prototype.add.call(this,t,n),e(this.keysByValue,n,t)},n.prototype.delete=function(e,n){r.prototype.delete.call(this,e,n),t(this.keysByValue,n,e)},n.prototype.hasValue=function(e){return this.keysByValue.has(e)},n.prototype.getKeysForValue=function(e){var t=this.keysByValue.get(e);return t?Array.from(t):[]},n}(u);export{y as IndexedMultimap,u as Multimap,e as add,t as del,r as fetch,n as prune};export default null;
